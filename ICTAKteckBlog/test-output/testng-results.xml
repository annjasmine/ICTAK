<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="30" passed="19" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-20T14:49:20 IST" name="Suite" finished-at="2022-03-20T14:52:46 IST" duration-ms="206100">
    <groups>
    </groups>
    <test started-at="2022-03-20T14:49:20 IST" name="Test" finished-at="2022-03-20T14:52:46 IST" duration-ms="206100">
      <class name="com.techblog.scripts.TCLogin">
        <test-method signature="verifyNullLogin()[pri:1, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:20 IST" name="verifyNullLogin" finished-at="2022-03-20T14:51:22 IST" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNullLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:22 IST" name="tearDown" finished-at="2022-03-20T14:51:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNullLogin status=SUCCESS method=TCLogin.verifyNullLogin()[pri:1, instance:com.techblog.scripts.TCLogin@38e79ae3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidPasswLogin()[pri:2, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:22 IST" name="verifyInvalidPasswLogin" finished-at="2022-03-20T14:51:29 IST" duration-ms="6916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPasswLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:29 IST" name="tearDown" finished-at="2022-03-20T14:51:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidPasswLogin status=SUCCESS method=TCLogin.verifyInvalidPasswLogin()[pri:2, instance:com.techblog.scripts.TCLogin@38e79ae3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidEmailLogin()[pri:3, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:29 IST" name="verifyInvalidEmailLogin" finished-at="2022-03-20T14:51:35 IST" duration-ms="6232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmailLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:35 IST" name="tearDown" finished-at="2022-03-20T14:51:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidEmailLogin status=SUCCESS method=TCLogin.verifyInvalidEmailLogin()[pri:3, instance:com.techblog.scripts.TCLogin@38e79ae3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySignUpLink()[pri:4, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:35 IST" name="verifySignUpLink" finished-at="2022-03-20T14:51:38 IST" duration-ms="2523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TCLogin@38e79ae3]" started-at="2022-03-20T14:51:38 IST" name="tearDown" finished-at="2022-03-20T14:51:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignUpLink status=SUCCESS method=TCLogin.verifySignUpLink()[pri:4, instance:com.techblog.scripts.TCLogin@38e79ae3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.techblog.scripts.TCLogin -->
      <class name="com.techblog.scripts.UserSignup">
        <test-method signature="verifyNullUserSignup()[pri:1, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:25 IST" name="verifyNullUserSignup" finished-at="2022-03-20T14:50:29 IST" duration-ms="4224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNullUserSignup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:29 IST" name="tearDown" finished-at="2022-03-20T14:50:29 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNullUserSignup status=SUCCESS method=UserSignup.verifyNullUserSignup()[pri:1, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidUserName()[pri:2, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:29 IST" name="verifyInvalidUserName" finished-at="2022-03-20T14:50:38 IST" duration-ms="9494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:38 IST" name="tearDown" finished-at="2022-03-20T14:50:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidUserName status=SUCCESS method=UserSignup.verifyInvalidUserName()[pri:2, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidUserEmail()[pri:3, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:38 IST" name="verifyInvalidUserEmail" finished-at="2022-03-20T14:50:44 IST" duration-ms="5284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidUserEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:44 IST" name="tearDown" finished-at="2022-03-20T14:50:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidUserEmail status=SUCCESS method=UserSignup.verifyInvalidUserEmail()[pri:3, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidPassword()[pri:4, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:44 IST" name="verifyInvalidPassword" finished-at="2022-03-20T14:50:49 IST" duration-ms="5215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:49 IST" name="tearDown" finished-at="2022-03-20T14:50:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidPassword status=SUCCESS method=UserSignup.verifyInvalidPassword()[pri:4, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInValidPassword2()[pri:5, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:49 IST" name="verifyInValidPassword2" finished-at="2022-03-20T14:50:54 IST" duration-ms="5510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInValidPassword2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:54 IST" name="tearDown" finished-at="2022-03-20T14:50:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInValidPassword2 status=SUCCESS method=UserSignup.verifyInValidPassword2()[pri:5, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyValidUserSignup()[pri:6, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:50:54 IST" name="verifyValidUserSignup" finished-at="2022-03-20T14:51:02 IST" duration-ms="7393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidUserSignup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.UserSignup@1dac5ef]" started-at="2022-03-20T14:51:02 IST" name="tearDown" finished-at="2022-03-20T14:51:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidUserSignup status=SUCCESS method=UserSignup.verifyValidUserSignup()[pri:6, instance:com.techblog.scripts.UserSignup@1dac5ef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.techblog.scripts.UserSignup -->
      <class name="com.techblog.scripts.TrainerSignUp">
        <test-method signature="verifyInvalidTrainerEmail()[pri:1, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:02 IST" name="verifyInvalidTrainerEmail" finished-at="2022-03-20T14:51:03 IST" duration-ms="1438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidTrainerEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:03 IST" name="tearDown" finished-at="2022-03-20T14:51:03 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidTrainerEmail status=SUCCESS method=TrainerSignUp.verifyInvalidTrainerEmail()[pri:1, instance:com.techblog.scripts.TrainerSignUp@6f45df59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyInvalidPasswordTrainerSignup()[pri:2, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:03 IST" name="verifyInvalidPasswordTrainerSignup" finished-at="2022-03-20T14:51:09 IST" duration-ms="5298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidPasswordTrainerSignup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:09 IST" name="tearDown" finished-at="2022-03-20T14:51:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyInvalidPasswordTrainerSignup status=SUCCESS method=TrainerSignUp.verifyInvalidPasswordTrainerSignup()[pri:2, instance:com.techblog.scripts.TrainerSignUp@6f45df59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyValidTrainerSignup()[pri:3, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:09 IST" name="verifyValidTrainerSignup" finished-at="2022-03-20T14:51:17 IST" duration-ms="8068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidTrainerSignup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:17 IST" name="tearDown" finished-at="2022-03-20T14:51:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidTrainerSignup status=SUCCESS method=TrainerSignUp.verifyValidTrainerSignup()[pri:3, instance:com.techblog.scripts.TrainerSignUp@6f45df59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySignin()[pri:4, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:17 IST" name="verifySignin" finished-at="2022-03-20T14:51:20 IST" duration-ms="2940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TrainerSignUp@6f45df59]" started-at="2022-03-20T14:51:20 IST" name="tearDown" finished-at="2022-03-20T14:51:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignin status=SUCCESS method=TrainerSignUp.verifySignin()[pri:4, instance:com.techblog.scripts.TrainerSignUp@6f45df59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.techblog.scripts.TrainerSignUp -->
      <class name="com.techblog.scripts.TestBase">
        <test-method is-config="true" signature="onSetup(java.lang.String)[pri:0, instance:com.techblog.scripts.TestBase@7494f96a]" started-at="2022-03-20T14:49:20 IST" name="onSetup" finished-at="2022-03-20T14:50:25 IST" duration-ms="64449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onSetup -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:com.techblog.scripts.TestBase@7494f96a]" started-at="2022-03-20T14:52:46 IST" name="quitBrowser" finished-at="2022-03-20T14:52:46 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- com.techblog.scripts.TestBase -->
      <class name="com.techblog.scripts.TestClass">
        <test-method signature="verifyLandingPage()[pri:1, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:51:38 IST" name="verifyLandingPage" finished-at="2022-03-20T14:51:38 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLandingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:51:38 IST" name="tearDown" finished-at="2022-03-20T14:51:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLandingPage status=SUCCESS method=TestClass.verifyLandingPage()[pri:1, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingFeedback()[pri:2, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:51:38 IST" name="varifyingFeedback" finished-at="2022-03-20T14:52:08 IST" duration-ms="30286" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#fname"}
  (Session info: chrome=99.0.4844.74)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4
*** Element info: {Using=id, value=fname}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#fname"}
  (Session info: chrome=99.0.4844.74)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4
*** Element info: {Using=id, value=fname}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.sendKeys(Unknown Source)
at com.techblog.pages.LandingPage.setFirstName(LandingPage.java:72)
at com.techblog.scripts.TestClass.varifyingFeedback(TestClass.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingFeedback -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:08 IST" name="tearDown" finished-at="2022-03-20T14:52:10 IST" duration-ms="1577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingFeedback status=FAILURE method=TestClass.varifyingFeedback()[pri:2, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingContactUs()[pri:3, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:10 IST" name="varifyingContactUs" finished-at="2022-03-20T14:52:15 IST" duration-ms="5402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingContactUs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:15 IST" name="tearDown" finished-at="2022-03-20T14:52:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingContactUs status=SUCCESS method=TestClass.varifyingContactUs()[pri:3, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingGitLink()[pri:4, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:15 IST" name="varifyingGitLink" finished-at="2022-03-20T14:52:19 IST" duration-ms="4445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingGitLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:19 IST" name="tearDown" finished-at="2022-03-20T14:52:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingGitLink status=SUCCESS method=TestClass.varifyingGitLink()[pri:4, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingLatestArticles()[pri:5, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:19 IST" name="varifyingLatestArticles" finished-at="2022-03-20T14:52:29 IST" duration-ms="9296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingLatestArticles -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:29 IST" name="tearDown" finished-at="2022-03-20T14:52:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingLatestArticles status=SUCCESS method=TestClass.varifyingLatestArticles()[pri:5, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingCategories()[pri:6, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:29 IST" name="varifyingCategories" finished-at="2022-03-20T14:52:35 IST" duration-ms="5774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingCategories -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:35 IST" name="tearDown" finished-at="2022-03-20T14:52:35 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingCategories status=SUCCESS method=TestClass.varifyingCategories()[pri:6, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingAboutUs()[pri:7, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:35 IST" name="varifyingAboutUs" finished-at="2022-03-20T14:52:39 IST" duration-ms="4333" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (602, 920)
  (Session info: chrome=99.0.4844.74)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (602, 920)
  (Session info: chrome=99.0.4844.74)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at com.techblog.pages.LandingPage.clickFb(LandingPage.java:108)
at com.techblog.scripts.TestClass.varifyingAboutUs(TestClass.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingAboutUs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:39 IST" name="tearDown" finished-at="2022-03-20T14:52:40 IST" duration-ms="1587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingAboutUs status=FAILURE method=TestClass.varifyingAboutUs()[pri:7, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="varifyingSocialMedia()[pri:8, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:40 IST" name="varifyingSocialMedia" finished-at="2022-03-20T14:52:44 IST" duration-ms="3281" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <p _ngcontent-poj-c47="">...</p> is not clickable at point (706, 781). Other element would receive the click: <div _ngcontent-poj-c47="" style="margin-left: 40%;">...</div>
  (Session info: chrome=99.0.4844.74)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <p _ngcontent-poj-c47="">...</p> is not clickable at point (706, 781). Other element would receive the click: <div _ngcontent-poj-c47="" style="margin-left: 40%;">...</div>
  (Session info: chrome=99.0.4844.74)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-0VG4TTE', ip: '172.20.16.36', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 98.0.4758.80 (7f0488e8ba0d8..., userDataDir: C:\Users\annja\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62084}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 47fca0b5301c582ae2ae690897c7cec4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy14.click(Unknown Source)
at com.techblog.pages.LandingPage.clickTerms(LandingPage.java:111)
at com.techblog.scripts.TestClass.varifyingSocialMedia(TestClass.java:146)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- varifyingSocialMedia -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.techblog.scripts.TestClass@63070bab]" started-at="2022-03-20T14:52:44 IST" name="tearDown" finished-at="2022-03-20T14:52:46 IST" duration-ms="1875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=varifyingSocialMedia status=FAILURE method=TestClass.varifyingSocialMedia()[pri:8, instance:com.techblog.scripts.TestClass@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.techblog.scripts.TestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
